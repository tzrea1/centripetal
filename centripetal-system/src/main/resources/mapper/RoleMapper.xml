<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joyboys.system.mapper.RoleMapper">

  <delete id="deleteRoleById" parameterType="Long">
    delete
    from rms_role
    where role_id = #{roleId}
  </delete>

  <delete id="deleteRoleByIds" parameterType="Long">
    delete from rms_role where role_id in
    <foreach close=")" collection="array" item="roleId" open="(" separator=",">
      #{roleId}
    </foreach>
  </delete>

  <insert id="insertRole" keyProperty="roleId" parameterType="Role" useGeneratedKeys="true">
    <trim prefix="insert into rms_role(" suffix=")" suffixOverrides=",">
      <if test="roleName != null and roleName != ''">role_name,</if>
      <if test="roleKey != null and roleKey != ''">role_key,</if>
      <if test="status != null and status != ''">status,</if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null and roleName != ''">#{roleName},</if>
      <if test="roleKey != null and roleKey != ''">#{roleKey},</if>
      <if test="status != null and status != ''">#{status},</if>
    </trim>
  </insert>

  <resultMap id="RoleResult" type="Role">
    <id column="role_id" property="roleId"/>
    <result column="role_name" property="roleName"/>
    <result column="role_key" property="roleKey"/>
    <result column="status" property="status"/>
  </resultMap>

  <select id="selectRoleList" parameterType="Role" resultMap="RoleResult">
    <if test="roleId != null and roleId != 0">
      AND r.role_id = #{roleId}
    </if>
    <if test="roleName != null and roleName != ''">
      AND r.role_name like concat('%', #{roleName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND r.status = #{status}
    </if>
    <if test="roleKey != null and roleKey != ''">
      AND r.role_key like concat('%', #{roleKey}, '%')
    </if>
    <include refid="selectRoleVo"/>
    order by r.role_id
  </select>

  <select id="selectRolePermissionByUserId" parameterType="Long" resultMap="RoleResult">
    <include refid="selectRoleVo"/>
    WHERE ur.user_id = #{userId}
  </select>

  <select id="selectRoleAll" resultMap="RoleResult">
    <include refid="selectRoleVo"/>
  </select>

  <select id="selectRoleListByUserId" parameterType="Long" resultType="Long">
    select r.role_id
    from rms_role r
           left join rms_user_role ur on ur.role_id = r.role_id
           left join user u on u.user_id = ur.user_id
    where u.user_id = #{userId}
  </select>

  <select id="selectRoleById" parameterType="Long" resultMap="RoleResult">
    <include refid="selectRoleVo"/>
    where r.role_id = #{roleId}
  </select>

  <select id="selectRolesByUserName" parameterType="String" resultMap="RoleResult">
    <include refid="selectRoleVo"/>
    WHERE u.user_name = #{userName}
  </select>

  <select id="checkRoleNameUnique" parameterType="String" resultMap="RoleResult">
    <include refid="selectRoleVo"/>
    where r.role_name=#{roleName} limit 1
  </select>


  <select id="checkRoleKeyUnique" parameterType="String" resultMap="RoleResult">
    <include refid="selectRoleVo"/>
    where r.role_key=#{roleKey} limit 1
  </select>

  <sql id="selectRoleVo">
    select distinct r.role_id, r.role_name, r.role_key, r.status
    from rms_role r
           left join rms_user_role ur on ur.role_id = r.role_id
           left join lrs_user u on u.user_id = ur.user_id
  </sql>

  <update id="updateRole" parameterType="Role">
    update rms_role
    <set>
      <if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
      <if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
      <if test="status != null and status != ''">status = #{status},</if>
    </set>
    where role_id = #{roleId}
  </update>

</mapper> 