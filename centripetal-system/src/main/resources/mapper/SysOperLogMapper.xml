<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joyboys.system.mapper.SysOperLogMapper">

  <delete id="deleteOperLogByIds" parameterType="Long">
    delete from sys_oper_log where oper_id in
    <foreach close=")" collection="array" item="operId" open="(" separator=",">
      #{operId}
    </foreach>
  </delete>

  <insert id="insertOperlog" parameterType="SysOperLog">
    insert into sys_oper_log(title, business_type, method, request_method, operator_type, oper_name,
                             dept_name, oper_url, oper_ip, oper_location, oper_param, json_result,
                             status, error_msg, cost_time, oper_time)
    values (#{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{operName},
            #{deptName}, #{operUrl}, #{operIp}, #{operLocation}, #{operParam}, #{jsonResult},
            #{status}, #{errorMsg}, #{costTime}, sysdate())
  </insert>

  <resultMap id="SysOperLogResult" type="SysOperLog">
    <id column="oper_id" property="operId"/>
    <result column="title" property="title"/>
    <result column="business_type" property="businessType"/>
    <result column="method" property="method"/>
    <result column="request_method" property="requestMethod"/>
    <result column="operator_type" property="operatorType"/>
    <result column="oper_name" property="operName"/>
    <result column="dept_name" property="deptName"/>
    <result column="oper_url" property="operUrl"/>
    <result column="oper_ip" property="operIp"/>
    <result column="oper_location" property="operLocation"/>
    <result column="oper_param" property="operParam"/>
    <result column="json_result" property="jsonResult"/>
    <result column="status" property="status"/>
    <result column="error_msg" property="errorMsg"/>
    <result column="oper_time" property="operTime"/>
    <result column="cost_time" property="costTime"/>
  </resultMap>

  <select id="selectOperLogList" parameterType="SysOperLog" resultMap="SysOperLogResult">
    <include refid="selectOperLogVo"/>
    <where>
      <if test="title != null and title != ''">
        AND title like concat('%', #{title}, '%')
      </if>
      <if test="businessType != null">
        AND business_type = #{businessType}
      </if>
      <if test="businessTypes != null and businessTypes.length > 0">
        AND business_type in
        <foreach close=")" collection="businessTypes" item="businessType" open="(" separator=",">
          #{businessType}
        </foreach>
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
      <if test="operName != null and operName != ''">
        AND oper_name like concat('%', #{operName}, '%')
      </if>
      <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
        AND oper_time &gt;= #{params.beginTime}
      </if>
      <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
        AND oper_time &lt;= #{params.endTime}
      </if>
    </where>
    order by oper_id desc
  </select>

  <select id="selectOperLogById" parameterType="Long" resultMap="SysOperLogResult">
    <include refid="selectOperLogVo"/>
    where oper_id = #{operId}
  </select>

  <sql id="selectOperLogVo">
    select oper_id,
           title,
           business_type,
           method,
           request_method,
           operator_type,
           oper_name,
           dept_name,
           oper_url,
           oper_ip,
           oper_location,
           oper_param,
           json_result,
           status,
           error_msg,
           oper_time,
           cost_time
    from sys_oper_log
  </sql>

  <update id="cleanOperLog">
    truncate table sys_oper_log
  </update>

</mapper> 